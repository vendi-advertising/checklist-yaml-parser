{% macro checkbox(display_text, has_checkbox) %}
    {% set id = 'id' ~ random(1, 9999999999) %}

    <label><input type="radio" name="{{ id }}" value="n/a"/>n/a</label>
    <label><input type="radio" name="{{ id }}" value="done"/>{{ display_text }}</label>
{% endmacro %}

{% macro walk_item(item, depth, key) %}
    {% import _self as macros %}
    {% if item.itemType == constant('App\\Entity\\ItemInterface::ITEM_TYPE_CHECKLIST') %}
        <h1>{{ item.displayText }}</h1>
        {% for key, items in item.items %}
            {{ macros.walk_item(items, depth + 1, key) }}
        {% endfor %}
    {% elseif item.itemType == constant('App\\Entity\\ItemInterface::ITEM_TYPE_SECTION') %}
        <div class="section">
            <h{{ depth }}>{{ item.displayText }}</h{{ depth }}>
            <ul>
                {% for key, items in item.items %}
                    {{ macros.walk_item(items, depth + 1, key) }}
                {% endfor %}
            </ul>
        </div>
    {% elseif item.itemType == constant('App\\Entity\\ItemInterface::ITEM_TYPE_SIMPLE') %}
        <li>
            {{ macros.checkbox(item.displayText) }}
        </li>
    {% elseif item.itemType == constant('App\\Entity\\ItemInterface::ITEM_TYPE_SUBLIST') %}
        <li>
            <h{{ depth }}>{{ item.displayText }}</h{{ depth }}>
            <ul>
                {% for key, items in item.items %}
                    {{ macros.walk_item(items, depth + 1, key) }}
                {% endfor %}
            </ul>
        </li>
    {% elseif item.itemType == constant('App\\Entity\\ItemInterface::ITEM_TYPE_GROUP_SUBLIST') %}
        <li>
            <h{{ depth }}>{{ item.displayText }}</h{{ depth }}>
            {% set depth = depth + 1 %}
            <ul>
                {% for key, items in item.items %}
                    <li>
                        <h{{ depth }}>{{ key }}</h{{ depth }}>
                        {# I'm not 100% positive this is correct, I'm not sure it would work #}
                        {# with a grouped list of grouped lists, but we'll cross that bridge later. #}
                        <ul>
                            {% for subitem in items %}
                                {{ macros.walk_item(subitem, depth + 1) }}
                            {% endfor %}
                        </ul>
                    </li>
                {% endfor %}
            </ul>
        </li>
    {% endif %}
{% endmacro %}
